%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 527.000000 262.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.8.2 (Build 12C60) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 527 262
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 527 262
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 527 262 rc
10.5 373.5 m
586.5 373.5 l
586.5 -359.5 l
10.5 -359.5 l
h
10.5 373.5 m
f
/Cs2 SC
27 0 0 27 42 82 cm
BI
/Width 81
/Height 81
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1JcCc1
XoIkhj8JHGV#RRs^]"'/WrKa3o)A"Sk5=KBp&;E"`W,`4n,<7`p&!eGq"sjao)8@_]`5tNqu6'_rquQg
qtf@Kqtg!_qu#p]]`6(Qq#:'equ$?gq"jd]k4niLp%n[bqu$$`rr0\4cN!\=q#13iqtp0bqt]gXrqH*Z
p%S.SrqZ?crqlTjq#1*h`W+6`qu69eq"ssaqtU'_q"EtErq6'[rqH<bq"a^^o)6Q-cN!e@q#13iq"k!c
rqQ9_rq?6^rq,RKp%87VqtBp]rqQKgqtg<hqu$6frr1"=dJs4Fq#13irqlKeqtU0brq?6^rq-*Zq!n%H
q!n7Prq$$Zrq69bqtU'arqcWkqu$?irr1"=dJs4Fq#1*erqcWirqQ9_rq69_rq#pUqsaLOqsOIQrpTaR
qsj[Vrq$-]rq60^qtL*brqZQjqu$6faT'Zfrr2]kqtpBhrqQBbqtC$]qt'gWrp]gRq!S%Hp$VhJqsaUU
rq$-]qt9s^rqHEerqZQirql]mq#/;6dJs4Fqu-Nlqtg<frqQKerq??`qt'^TrpTjUrpTjRm-FQ8qsOIQ
rpTjUrposYrq69bqtU'brqlTjrr)`ncMu;lqu-NlrqlThrqZQgrqHEbqt'gXrp]gRqsFCLl0A96qs==L
rpTjUrpg!Zrq-3_qtC$`rqQKgrqlTjrr)`ncMu;lqu-NlrqlThrqQKerq??`qt'gUrp]pUrpKdPrp0RK
qs!S5rp'LKrp9XOqsOIQrpg!Zrq-*\rqHEerqZQiqu$Hlqu4n@fDkaIrr)iorql]kqt^6drq??`rq$$W
qsXOOrp0IHqrn%Bp#c8:p#uD@qs==OrpTjUrposYrq??crqQKhrql]mrr)`ncMuMrqu6TnrqucmrqcWi
rqQKerq69_rq$-Zrp]pUrp9XMrp'LIroj.>n)XK1roa:Erp'LKrp9XOrpTjUrpg!Zrq-3_rqHEerqZQj
rquQicMuMrqu6TnrqucmrqcWhrqHEcrq-3]rpg!WrpTjSqs47Groj@EroO.?qr@J2ro="=roO.Aroa:E
rp0IJrpKdSrp]pYrq-3_rqHEerqZQjrquQicMuMrqu6TnqtpBhrqQKerq60[qsaURrp9OIroj@EroO.>
qr7;,qr.P6qrIY;roj@IrpB^Qrp]pWrpp'\rq??crqQKhrql]mqu+h?fDkaIrr)`krqZQgrqHEbqt'gU
rpKdPrp0RJroj@DroF(=ro3q8qqq;-ro!e5ro!e7ro="=roO.Broj@Hqs=4Lrpg!Zrq69arqQKhrql]m
qu+h?fDkaIrr)`krqZQgrqHEarpp'YrpTjRrp9XMroj@EroO%;rnm_5rnm_3qq_8.qqqD2ro*k:roF(A
roj@Grp0RMrpTjUrpg!Zrq69arqQKhrql]mqu-NndJqhuqu6TnqtpBgrqQKerq-3[rp]pTrp9XMrosFG
roa:Aqr7V4rndY1n(dp#rnm_5ro3q=roX4Drp0RMrpKdSrp]pXrq69arqQBerqlTkrr1=FfDkaIrr)`k
rqZQgrqHEarpg!WrpK[LrosFGroX4?ro*k7rnm_2rnR2$qqV2,rnm_5ro3h:roa:Grp9XOrpTjUrposZ
rqHEfrqcWkqu-NndJqhuqu6Tnqtg<frqHEcrq-3[rp]pTqs47Froa:Bro=":ro!e4rnR)!qqV2,rnm_5
ro3h:roa:Frp0RMrpTjUrposYrqHEfrqcWkqu-NndJqhuqu6Tnqtg<erqHEcrq-3[rp]pTqs47Froa:B
ro="9rnm_3rnRD*ptGW#rn[S2ro!e8qrIb>rosFJrp9XQrp]pXqt0m^rqZQirqlTkrr1=FfDkaIrr)`j
rqQKerq??`rpg!WrpK[Lroj@EroO.>ro!e5rndY0qqLo"qqV2,rnm_5ro3h9roa:Frp0RMrpTjUrposY
rqHEfrqcWkqu-NndJqhuqu6Tnqtg<frqHEcrq-3[rp]pTqs47Groa:Bro=":ro!e5rnR)!qqV2-rnm_5
ro3h:roa:Frp0RNrpTjUrposYrqHEfrqcWkqu-NndJqhuqu6TnqtpBgrqQKerq-3[rp]pTrp9XMrosFG
roa:Bro3q9rnmV0p"]H#rndY3ro!e8qrRh?rp'LLrpB^Rrp]pXqt9s_rqZQirqlTkrr1=FfDkaIrr)`k
rqZQgrqHEarpp'YrpTjQrp0RKroj@EroO%:qqqD0p"fN%qr%J4ro="?roa:Erp0RMqsXORrpp'^rqHEe
rqcWkrquZlrr1=FfDkaIrr)`krqZQgrqHEaqssaTrpKdPrp0RIroa:Bqr@\7ro!J,ro!e5qr%J5ro="=
roa:ErosFJrp9XQrp]pWrq$-_rqHEerqcWkrquZlrr1=FfDkaIrr)`krqcWhrqHEbqt'gVrpTjSrp9XL
rosFFroO.?ro=":ro!S/ro!e5ro!e8qrIb=roa:Erp0IKqsaUUrq-3`rqHEerqcWkrquZlcMuMrqu6Tn
rqucmrqcWhrqHEcrq-3]rpg!WrpTjRqs+1Froj@EroEt:p#5f-ro<n;roa:Erp'LLrpKdSrp]pXrq$-]
rq??crqQKhrql]mqu+h?fDkaIrr)iorql]krqQKerq??`rq$-[rp]pUrpK[Lrp'LHroa:BroEt:qr7M5
roF(?roX4Croj@Irp9XOrpTjUrpg!Zrq-3_rqHEerqZQjrquQicMuMrqu6TnrqucmrqcWirqQKerq69_
rq$-Zrp]pUrpKdQrp0RKros4@p#Z)5qrdtBrp0IJrpKdSrp]pXqt0m]rqHEerqcWkrqucoqu4n@fDkaI
rr)iorqlKerqQKerq??`qssXQrpKdQqs47Groih6roj7Drp'LLqsF:Mrpg!Zqt0m]rqHEerqcNirr)`n
cMu;lqu-NlrqlThrqQKerq??`qt'gWrp]gRrp9OJqs!S5rp'LKrp9XOrpTaRrpp'[rq-*\rqHEerqZQi
qu$Hlqu4n@dJs4Fqu-Nlqtg<frqQKerq??`qt'gVqsXFMrpB(<qs=4Jrp]pUrp]pXqt0m\q"Od`rqcWk
qu$Hlqu4n@dJs4Fqu-Nlq"k!brqHEcqt9s\qssaTrp]pUrpJq9rpTaRqssaXqt0m]rqH<brqcWkq#(-i
qu4n@dJs4Fq#1*erqcWhqtL!]rq-*Zq!n@Prp]:Crp]pUrp]pWrpp'[rq-*\rq??crqQKgrqcWkrquQi
aT'Zfrr2]krqucmqtg<fq"Od]qt9s\qt'^Sp$_nLrpTaRqssaXqt0m\p%SI\rqcWkqu$?irr1"=dJs"@
rr)ioqtp9erqZQgrqH3]rq69_p%.kHqssXUqt0dYrq??cqtTs_q#($frr1"=cN!e@q#13iq"k!crqQ9_
rq?6^qt0@Kp%87VqtBp]rqQKgqtg<hqu$6frr1"=cN!\=q#13iqtp9erqZQgo(VqQq"=FUp%S@Yq"k!e
qu$6fqu4S7cN!J7rr)Wiqtp0brqZ6^k4elMq"a^]rqlKgqu-<h`W+$Zq#:'equ$?gq"jd]k4niLp%n[b
qu$$`rr0\4`W,`4n,<7`p&!eGq"sjao)8@_]`5tNl2L\\p&*bFn,3(]n,C!"]`7R%m/?2Hk5FuP[f<K0
m/H/Gn,B-_XoH08V#Q#GNrO\1NrO\1NrO\1NrO\1NrO\1NrO\1NrO\1NrO\1NrO\1NrO\1NrO\1NrO\1
NrO\1NrO\1NrOV
~> %APLeod
EI
1 J
1 j
/Cs1 SC
0 0 0 sc
1 0 0 -1 11 373 cm
0.66181469 360.00854 m
504.66183 360.66214 l
S
2 w
0.60000002 0.60000002 0.60000002 sc
285.50192 360.37793 m
326.50626 242.2594 l
362.48953 360.00854 l
362.48953 360.00854 l
S
1 w
0 0 0 sc
295.62305 331.2226 m
320.36215 334.41632 l
S
295.5834 331.33685 m
353.13727 329.41177 l
320.34308 334.70261 l
S
2 w
0.60000002 0.60000002 0.60000002 sc
326.50626 242.2594 m
318.62845 360.42087 l
S
0 0 0 sc
CM
334.45749 147.08907 m
340.0144 147.08907 l
341.11896 147.08907 342.0144 146.19363 342.0144 145.08907 c
342.0144 132.08502 l
342.0144 130.98045 341.11896 130.08502 340.0144 130.08502 c
334.45749 130.08502 l
333.35291 130.08502 332.45749 130.98045 332.45749 132.08502 c
332.45749 132.08502 332.45749 132.08502 332.45749 132.08502 c
332.45749 145.08907 l
332.45749 146.19363 333.35291 147.08907 334.45749 147.08907 c
334.45749 147.08907 334.45749 147.08907 334.45749 147.08907 c
h
334.45749 147.08907 m
f
1 w
1 0 0 -1 11 373 cm
323.45749 225.91093 m
329.0144 225.91093 l
330.11896 225.91093 331.0144 226.80637 331.0144 227.91093 c
331.0144 240.91498 l
331.0144 242.01955 330.11896 242.91498 329.0144 242.91498 c
323.45749 242.91498 l
322.35291 242.91498 321.45749 242.01955 321.45749 240.91498 c
321.45749 240.91498 321.45749 240.91498 321.45749 240.91498 c
321.45749 227.91093 l
321.45749 226.80637 322.35291 225.91093 323.45749 225.91093 c
323.45749 225.91093 323.45749 225.91093 323.45749 225.91093 c
h
323.45749 225.91093 m
S
CM
325.77731 140.20648 m
331.76703 140.20648 l
331.76703 133.09377 l
325.77731 133.09377 l
h
325.77731 140.20648 m
f
0.5 w
1 0 0 -1 11 373 cm
314.77731 232.79352 m
320.76703 232.79352 l
320.76703 239.90623 l
314.77731 239.90623 l
h
314.77731 232.79352 m
S
CM
306.91779 44.71381 m
308.24933 44.229168 l
307.15701 41.228054 l
305.82547 41.7127 l
h
306.91779 44.71381 m
f
1 w
1 0 0 -1 11 373 cm
295.91779 328.28619 m
297.24933 328.77084 l
296.15701 331.77194 l
294.82547 331.28729 l
h
295.91779 328.28619 m
S
CM
372.71948 14.789648 m
374.13651 14.789648 l
374.13651 11.595931 l
372.71948 11.595931 l
h
372.71948 14.789648 m
f
1 0 0 -1 11 373 cm
361.71948 358.21036 m
363.13651 358.21036 l
363.13651 361.40408 l
361.71948 361.40408 l
h
361.71948 358.21036 m
S
CM
328.99872 15.357595 m
330.41571 15.357595 l
330.41571 12.163878 l
328.99872 12.163878 l
h
328.99872 15.357595 m
f
1 0 0 -1 11 373 cm
317.99872 357.6424 m
319.41571 357.6424 l
319.41571 360.83612 l
317.99872 360.83612 l
h
317.99872 357.6424 m
S
CM
295.96698 14.718903 m
297.38397 14.718903 l
297.38397 11.525186 l
295.96698 11.525186 l
h
295.96698 14.718903 m
f
1 0 0 -1 11 373 cm
284.96698 358.2811 m
286.38397 358.2811 l
286.38397 361.47482 l
284.96698 361.47482 l
h
284.96698 358.2811 m
S
CM
321.11539 85.611931 m
322.44693 85.127289 l
321.35461 82.126175 l
320.02307 82.610817 l
h
321.11539 85.611931 m
f
1 0 0 -1 11 373 cm
310.11539 287.38806 m
311.44693 287.87271 l
310.35461 290.87381 l
309.02307 290.38919 l
h
310.11539 287.38806 m
S
CM
330.72272 39.983364 m
332.13779 39.909203 l
331.97064 36.719864 l
330.55557 36.794025 l
h
330.72272 39.983364 m
f
1 0 0 -1 11 373 cm
319.72272 333.01663 m
321.13779 333.09079 l
320.97064 336.28015 l
319.55557 336.20596 l
h
319.72272 333.01663 m
S
CM
333.53751 82.203117 m
334.95258 82.12896 l
334.78543 78.939621 l
333.37036 79.013779 l
h
333.53751 82.203117 m
f
1 0 0 -1 11 373 cm
322.53751 290.79688 m
323.95258 290.87103 l
323.78543 294.06039 l
322.37036 293.98624 l
h
322.53751 290.79688 m
S
CM
363.2326 44.322693 m
364.60132 44.689442 l
365.42792 41.604549 l
364.0592 41.237801 l
h
363.2326 44.322693 m
f
1 0 0 -1 11 373 cm
352.2326 328.67731 m
353.60132 328.31055 l
354.42792 331.39545 l
353.0592 331.76221 l
h
352.2326 328.67731 m
S
CM
350.70175 85.327759 m
352.07047 85.694511 l
352.89706 82.609619 l
351.52835 82.242867 l
h
350.70175 85.327759 m
f
1 0 0 -1 11 373 cm
339.70175 287.67224 m
341.07047 287.30548 l
341.89706 290.39038 l
340.52835 290.75714 l
h
339.70175 287.67224 m
S
CM
37.712521 18.711575 m
38.882088 17.540003 38.882088 15.640512 37.712521 14.46894 c
36.542961 13.297361 34.646732 13.297361 33.477173 14.46894 c
32.307606 15.640512 32.307606 17.540003 33.477173 18.711575 c
34.646732 19.883154 36.542961 19.883154 37.712521 18.711575 c
f
1 0 0 -1 11 373 cm
26.712523 354.28842 m
27.882088 355.45999 27.882088 357.3595 26.712523 358.53107 c
25.542963 359.70264 23.646732 359.70264 22.477173 358.53107 c
21.307608 357.3595 21.307608 355.45999 22.477173 354.28842 c
23.646732 353.11685 25.542963 353.11685 26.712523 354.28842 c
S
CM
67.210327 18.711575 m
68.37989 17.540003 68.37989 15.640512 67.210327 14.46894 c
66.040764 13.297361 64.144531 13.297361 62.974976 14.46894 c
61.805408 15.640512 61.805408 17.540003 62.974976 18.711575 c
64.144531 19.883154 66.040764 19.883154 67.210327 18.711575 c
f
1 0 0 -1 11 373 cm
56.210323 354.28842 m
57.37989 355.45999 57.37989 357.3595 56.210323 358.53107 c
55.040764 359.70264 53.144535 359.70264 51.974976 358.53107 c
50.805408 357.3595 50.805408 355.45999 51.974976 354.28842 c
53.144535 353.11685 55.040764 353.11685 56.210323 354.28842 c
S
CM
30.960079 23.299417 m
68.686302 23.299417 l
68.686302 22.299417 l
30.960079 22.299417 l
h
30.960079 23.299417 m
f
1 0 0 -1 11 373 cm
19.960079 349.70059 m
57.686298 349.70059 l
57.686298 350.70059 l
19.960079 350.70059 l
h
19.960079 349.70059 m
S
24.95409 350.70059 m
24.95409 353.89432 l
S
54.491016 350.70059 m
54.491016 353.89432 l
S
CM
49.022213 23.099817 m
50.022213 23.099817 l
50.022213 108.01741 l
49.022213 108.01741 l
h
49.022213 23.099817 m
f
1 0 0 -1 11 373 cm
38.022213 349.90018 m
39.022213 349.90018 l
39.022213 264.98257 l
38.022213 264.98257 l
h
38.022213 349.90018 m
S
0.80000001 0.80000001 0.80000001 sc
CM
47.881527 250.94678 m
51.677353 250.94678 l
51.677353 96.954384 l
47.881527 96.954384 l
h
47.881527 250.94678 m
f
0.25 w
0 0 0 sc
1 0 0 -1 11 373 cm
36.881527 122.05323 m
40.677353 122.05323 l
40.677353 276.04562 l
36.881527 276.04562 l
h
36.881527 122.05323 m
S
1 w
36.810837 276.21854 m
46.375202 276.26501 l
S
0 0 1 sc
CM
56.439087 100.62642 m
57.180271 99.945778 57.180271 98.842255 56.439087 98.161613 c
55.697906 97.48098 54.496216 97.48098 53.755035 98.161613 c
53.013851 98.842255 53.013851 99.945778 53.755035 100.62642 c
54.496216 101.30705 55.697906 101.30705 56.439087 100.62642 c
f
0 0 0 sc
1 0 0 -1 11 373 cm
45.439087 272.3736 m
46.180271 273.05423 46.180271 274.15775 45.439087 274.83838 c
44.697906 275.51901 43.496216 275.51901 42.755035 274.83838 c
42.013851 274.15775 42.013851 273.05423 42.755035 272.3736 c
43.496216 271.69293 44.697906 271.69293 45.439087 272.3736 c
S
ep
end
%%Trailer
%%EOF
